#!/bin/bash

PYTHON=$1
DIR=$2

rm -rf $DIR
mkdir $DIR
cd $DIR # bash inherits CWD by default

# Theano tests are really heavyweight, so start them first -- test_theano.py
# will use 1 thread per 2 cores. Then start enough parallel tests of other
# packages to keep the load near max.

$PYTHON /vagrant/test_theano.py > theano.txt 2>&1 &

sleep 90 # Give Theano a chance to ramp up

parallel --gnu --load '80%' bash -c {} <<COMMANDS
$PYTHON `which iptest3` --all > ipython.txt 2>&1
$PYTHON /usr/local/lib/$PYTHON/dist-packages/tables/tests/test_all.py > pytables.txt 2>&1
$PYTHON -c "import numpy; numpy.test('full')" > numpy.txt 2>&1
$PYTHON -c "import scipy; scipy.test('full')" > scipy.txt 2>&1
$PYTHON -c "import pymc; pymc.test('full')" > pymc.txt 2>&1
$PYTHON -c "import matplotlib; matplotlib.test()" > matplotlib.txt 2>&1
$PYTHON /usr/local/bin/nosetests pandas > pandas.txt 2>&1
$PYTHON /usr/local/bin/nosetests sklearn --exe > scikit-learn.txt 2>&1
$PYTHON /usr/local/bin/nosetests joblib > joblib.txt 2>&1
(ln -s /vagrant/.cache/src/Pillow/Images . && $PYTHON /vagrant/.cache/src/Pillow/selftest.py --installed) > pillow.txt 2>&1
$PYTHON /usr/local/lib/$PYTHON/dist-packages/nltk/test/runtests.py > nltk.txt 2>&1
(cd /vagrant/.cache/src/gensim && $PYTHON setup.py test) > gensim.txt 2>&1
COMMANDS

# Don't quit until all children return

wait

