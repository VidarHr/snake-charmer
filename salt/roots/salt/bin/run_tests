#!/bin/bash

PYTHON=$1
DIR=$2
CORES=$3

rm -rf $DIR
mkdir $DIR
cd $DIR # bash inherits CWD by default

# Run full-saturation tests first, in series.

$PYTHON -c "import numba.testing as test; test.multitest()" > numba.out 2>&1

# iptest3 gives us most cores used but lots of spare capacity.
# Needs sudo so it can write to job database in dist packages.

sudo $PYTHON `which iptest3` --all -j $CORES --subproc-streams show parallel > ipython.parallel.out 2>&1

# Then the rest of them -- where we DON'T want sudo.

$PYTHON `which iptest3` --all -j $CORES --subproc-streams show html kernel.inprocess autoreload terminal core kernel lib qt nbformat testing nbconvert config extensions utils > ipython.OTHERS.out 2>&1

# Theano is both heavyweight, and a bit of a pain. Get a list
# of tests, and then manually distribute them.

[ -d ~/.theano ] && find ~/.theano -depth -name lock_dir -exec rm -rf '{}' \;

$PYTHON `which theano-nose` --collect -v --with-id --theano > theano_test_list.txt 2>&1

egrep -o '^#([0-9]+)' theano_test_list.txt | egrep -o '([0-9]+)' > theano_test_ids.txt

#parallel --gnu --jobs $CORES -m -N 100 $PYTHON `which theano-nose` --with-id {} --theano

$PYTHON `which theano-nose` --processes=$CORES --process-timeout=9999 --process-restartworker --batch=100 --theano > theano.out 2>&1 &

parallel --gnu --jobs $CORES bash -c {} <<COMMANDS
$PYTHON /usr/local/lib/$PYTHON/dist-packages/tables/tests/test_all.py --heavy > pytables.out 2>&1
$PYTHON -c "import sympy; sympy.runtests.run_all_tests()" > sympy.out 2>&1
$PYTHON -c "import numpy; numpy.test('full')" > numpy.out 2>&1
$PYTHON -c "import scipy; scipy.test('full')" > scipy.out 2>&1
$PYTHON -c "import pymc; pymc.test('full')" > pymc.out 2>&1
$PYTHON -c "import matplotlib; matplotlib.test()" > matplotlib.out 2>&1
$PYTHON /usr/local/bin/nosetests pandas > pandas.out 2>&1
$PYTHON /usr/local/bin/nosetests sklearn --exe > scikit-learn.out 2>&1
$PYTHON /usr/local/bin/nosetests joblib > joblib.out 2>&1
(ln -s /srv/cache/src/Pillow/Images . && $PYTHON /srv/cache/src/Pillow/selftest.py --installed) > pillow.out 2>&1
$PYTHON /usr/local/lib/$PYTHON/dist-packages/nltk/test/runtests.py > nltk.out 2>&1
(cd /srv/cache/src/gensim && $PYTHON setup.py test) > gensim.out 2>&1
COMMANDS

# Don't quit until all children return

wait

